# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    # Runs a single command using the runners shell
    - name: Run
      run: |
        sudo apt update
        sudo apt install mpi-default-bin mpi-default-dev
        sudo apt install libfftw3-dev gsl-bin libgsl0-dev libboost-serialization-dev
        sudo apt-get update
        pip install PyYAML pytz
        git clone --bare https://github.com/plumed/plumed2.git
        export PATH="$HOME/opt/bin:$PATH"
        export LD_LIBRARY_PATH="$HOME/opt/lib:$LD_LIBRARY_PATH"
        export LIBRARY_PATH="$HOME/opt/lib:$LIBRARY_PATH"
        export CPATH="$HOME/opt/include:$CPATH"
        # needed to avoid MPI warning
        export OMPI_MCA_btl="^openib"
        sudo ln -s ccache /usr/local/bin/mpic++
        export PATH=/usr/lib/ccache:${PATH}
        ccache -s
        .travis/install.xdrfile
        # version=master or version=f123f12f3 to select a specific version
        # pick newest release branch (alphabetic, will fail at v2.10)
        CXX="mpic++" .travis/install.plumed version="$(cd plumed2.git ; git branch | sed "s/^ *//" | grep '^v2\.[0-9]$' | tail -n 1)" repo=$PWD/plumed2.git
        # GB: in addition, we install master version as plumed_master
        CXX="mpic++" .travis/install.plumed version=master suffix=_master repo=$PWD/plumed2.git
        ccache -s
        python --version
        python nest.py

