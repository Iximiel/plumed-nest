# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # this job install all dependencies:
  # - python + apt-get stuff
  # - libtorch (to $HOME/opt)
  # - two plumed versions (to $HOME/opt)
  # Dependencies installed in $HOME/opt are then uploaded as artifacts
  dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/opt
          ~/.ccache
        key: ccache-${{ runner.os }}-${{ github.sha }}
        restore-keys: ccache-${{ runner.os }}-
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        .ci/install.dependencies
    - name: Set paths
      run: |
        source .ci/setup.environment

    - name: Install libtorch
      run: |
        .ci/install.libtorch
    - name: Install plumed
      run: |
        git clone --bare https://github.com/plumed/plumed2.git
        sudo ln -s ccache /usr/local/bin/mpic++
        export PATH=/usr/lib/ccache:${PATH}
        ccache -s
        # version=master or version=f123f12f3 to select a specific version
        # pick newest release branch (alphabetic, will fail at v2.10)
        CXX="mpic++" .ci/install.plumed version="$(cd plumed2.git ; git branch | sed "s/^ *//" | grep '^v2\.[0-9]$' | tail -n 1)" repo=$PWD/plumed2.git
        # GB: in addition, we install master version as plumed_master
        CXX="mpic++" .ci/install.plumed version=master suffix=_master repo=$PWD/plumed2.git
        ccache -s
        cd
        tar cjf opt.tbz2 opt
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: dependencies
        path: ~/opt.tbz2
        retention-days: 1
      
    
  # This workflow contains a job called "build"
  build:
    strategy:
      matrix:
        replica: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    runs-on: ubuntu-latest
    needs: dependencies

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        source .ci/install.dependencies
    - name: Set paths
      run: |
        source .ci/setup.environment

    - name: Download dependencies
      uses: actions/download-artifact@v3
    - name: Unpack dependencies
      run: |
        cd
        tar xjf opt.tbz2

    - name: Run
      run: |
        python --version
        python nest.py --nreplicas 10 --replica ${{matrix.replica}}
        tar cf nest_files.tar $(find . -name "*.md") $(find . -name "*.stdout.txt.zip") $(find . -name "*.stderr.txt.zip") $(find . -name "*badge.svg") _data/eggs*.yml _data/plumed.yml

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: nest-content${{matrix.replica}}
        path: nest_files.tar
        retention-days: 1
  # This is the job that uploads the nest
  upload:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v3
    - name: Upload
      env:
        PLUMED_NEST_GITHUB_TOKEN: ${{ secrets.PLUMED_NEST_GITHUB_TOKEN }}
      run: |
        bash .ci/push _config.yml _layouts _data assets # _sass
        #{
        #  find . -name "*.md"
        #  find . -name "*.stdout.txt.zip"
        #  find . -name "*badge.svg"
        #  echo _config.yml _layouts _data assets # _sass
        #} | bash .ci/push

